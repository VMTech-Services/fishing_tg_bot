name: Fish-Bot deploy

concurrency:
  group: ${{ github.repository }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]

env:
  REPO_NAME: ${{ github.event.repository.name }}
  IMAGE_TAG: latest

jobs:
  clone:
    runs-on: [self-hosted, windows]
    outputs:
      repo-path: ${{ steps.clone.outputs.repo-path }}
    steps:
      - name: Checkout code
        id: clone
        shell: pwsh
        run: |
          $path = "fresh_repo"
          Remove-Item $path -Recurse -Force -EA SilentlyContinue
          git clone --depth 1 --branch $($env:GITHUB_REF.Split('/')[-1]) `
            "https://x-access-token:$($env:GITHUB_TOKEN)@github.com/$($env:GITHUB_REPOSITORY).git" $path
          echo "repo-path=$path" >> $env:GITHUB_OUTPUT

  build:
    needs: clone
    runs-on: [self-hosted, windows]
    steps:
      - name: Build Docker image
        shell: pwsh
        run: docker build -t $env:REPO_NAME:$env:IMAGE_TAG ${{ needs.clone.outputs.repo-path }}

  deploy:
    needs: build
    runs-on: [self-hosted, windows]
    env:
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
    steps:
      - name: Deploy container
        shell: pwsh
        run: |
          docker rm -f $env:REPO_NAME 2>$null
          docker run -d --name $env:REPO_NAME -e BOT_TOKEN=$env:BOT_TOKEN $env:REPO_NAME:$env:IMAGE_TAG
          if (!(docker inspect -f '{{.State.Running}}' $env:REPO_NAME)) { exit 1 }